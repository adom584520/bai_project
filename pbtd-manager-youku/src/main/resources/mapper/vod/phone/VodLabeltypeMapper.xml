<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pbtd.manager.vod.phone.common.mapper.VodLabeltypeMapper">
	<resultMap id="resultMap"
		type="com.pbtd.manager.vod.phone.common.domain.VodLabeltype">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="sequence" property="sequence" jdbcType="INTEGER" />
		<result column="update_time" property="update_time" jdbcType="DATE" />
	</resultMap>
	<sql id="columns">
		id, name,sequence, update_time
	</sql>
	<!-- 模糊查询 -->
	<sql id="whrClauseLike">
		<if test="id != null and id > -1">
			and id = #{id,jdbcType=INTEGER}
		</if>
		<if test="name != null and name != ''">
			and name like '%${name}%'
		</if>
	</sql>
	<sql id="whrClauseLikeMore">
		<if test="id_ != null">
			and ID in
			<foreach collection="id_" index="index" item="item" open="("
				separator="," close=")">
				#{item,jdbcType=INTEGER}
			</foreach>
		</if>
	</sql>
	<!-- 精确查询 -->
	<sql id="whrClauseEqual">
		<if test="id != null and id > -1">
			and ID = #{id,jdbcType=INTEGER}
		</if>
		<if test="update_time != null and update_time != '' ">
			and date_format(update_time,'%Y-%m-%d') = #{update_time,jdbcType=DATE}
		</if>
	</sql>
	<sql id="whrClauseEqualMore">
		<if test="id_ != null">
			and ID in
			<foreach collection="id_" index="index" item="item" open="("
				separator="," close=")">
				#{item,jdbcType=INTEGER}
			</foreach>
		</if>
	</sql>
	<sql id="orderByClause">
		<choose>
			<when test="sort != null and sort != ''">
				order by ${sort}
				<if test="order != null and order != ''">${order}</if>
			</when>
			<otherwise>
				order by  sequence
			</otherwise>
		</choose>
	</sql>
	<!--SElECT查询语句 -->
	<select id="count" parameterType="Map" resultType="java.lang.Integer">
		select count(ID)
		from vod_labeltype
		where 1=1
		<include refid="whrClauseLike" />
		<include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
	</select>
	<select id="page" parameterType="Map" resultMap="resultMap">
		select
		id, name,sequence,update_time
		from vod_labeltype a
		where 1=1
		<include refid="whrClauseLike" />
		<include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
		order by  sequence
		<if test="start != null  ">
			limit #{start},#{pageSize}
		</if>
	</select>
	<select id="load" parameterType="java.lang.Integer" resultMap="resultMap">
		select
		<include refid="columns" />
		from vod_labeltype
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<!--INSERT/UPDATE/DELETE 执行语句 -->
	<insert id="insert" parameterType="com.pbtd.manager.vod.phone.common.domain.VodLabeltype">
		insert into
		vod_labeltype
		(
		name,sequence, update_time
		)
		values
		(
		#{name,jdbcType=VARCHAR},
		#{sequence,jdbcType=INTEGER},
		now()
		)
	</insert>
	<update id="update" parameterType="com.pbtd.manager.vod.phone.common.domain.VodLabeltype">
		update vod_labeltype
		<set>
			update_time=now(),
			<if test="name != null ">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="sequence != null and sequence>0">
				sequence = #{sequence,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<delete id="deletes" parameterType="Map">
		delete from vod_labeltype
		where 1=1
		<include refid="whrClauseLike" />
		<include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
	</delete>
	<insert id="insertjson" parameterType="com.pbtd.manager.vod.phone.common.domain.VodLabeltype">
		insert into
		vod_labeltype
		(
		id,name,sequence, update_time
		)
		values
		(
		#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{sequence,jdbcType=INTEGER},
		now()
		)
	</insert>
	<select id="findmaxVSminsequence" parameterType="Map" resultType="Map">
		select max(sequence) max, min(sequence) min
		from vod_labeltype a
		<where>
			<if test="id!=null ">
				and a.id  in (${id})
			</if>
		</where>
	</select>
	<select id="findsequencesum" parameterType="Map" resultType="Map">
		select  sequence 
		from vod_labeltype a
		<where>
			<if test="id!=null ">
				and a.id   in (${id})
			</if>
			<if test="id_ != null">
        	and ID in
        	<foreach collection="id_" index="index" item="item" open="(" separator="," close=")">
            	#{item,jdbcType=INTEGER}
            </foreach>
        </if>
		</where>
			order by a.sequence
	</select>
	<select id="findsequence" parameterType="Map" resultType="Map">
		select a.id,a.sequence
		from vod_labeltype a
		<where>
			<if test="id!=null ">
				and a.id not in (${id})
			</if>
			<if test="max!=null and max!='' ">
			       	<![CDATA[    and sequence<= #{max,jdbcType=INTEGER}]]>
			</if>
			<if test="min!=null and min!='' ">
			        <![CDATA[    and sequence>= #{min,jdbcType=INTEGER}]]>
			</if>
		</where>
		order by a.sequence
	</select>
</mapper>