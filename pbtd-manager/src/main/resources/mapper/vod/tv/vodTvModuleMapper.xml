<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pbtd.manager.vod.tv.mould.mapper.VodTvModuleMapper">
	<resultMap id="BaseResultMap"
		type="com.pbtd.manager.vod.tv.mould.domain.VodTvModule">
		<id column="moduleId" property="moduleid" />
		<result column="masterplateId" property="masterplateid" />
		<result column="sequence" property="sequence" />
		<result column="channel" property="channel" />
		<result column="describes" property="describes" />
		<result column="name" property="name" />
		<result column="linkchannel" property="linkchannel" />
		<result column="linklabel" property="linklabel" />
		<result column="linkstatus" property="linkstatus" />
		<result column="modulepic" property="modulepic	" />
		<result column="picstatus" property="picstatus" />
	</resultMap>
	<sql id="Base_Column_List">
		moduleId, masterplateId,
		sequence,channel,describes,name,linkchannel,linklabel,linkstatus,modulepic,picstatus
	</sql>
	<!-- 模糊查询 -->
	<sql id="whrClauseLike">
		<if test="name != null and name != ''">
			and name like '%${name}%'
		</if>
	</sql>
	<!-- 精确查询 -->
	<sql id="whrClauseEqual">
		<if test="masterplateId != null and masterplateId > -1">
			and masterplateId = #{masterplateId,jdbcType=INTEGER}
		</if>
		<if test="channel != null and channel > -1">
			and channel = #{channel,jdbcType=INTEGER}
		</if>
		<if test="sequence != null and sequence > -1">
			and sequence = #{sequence,jdbcType=INTEGER}
		</if>
	</sql>
	<sql id="orderByClause">
		<choose>
			<when test="sort != null and sort != ''">
				order by ${sort}
				<if test="order != null and order != ''">${order}</if>
			</when>
			<otherwise>
				order by channel,moduleId
			</otherwise>
		</choose>
	</sql>
	<select id="select" resultMap="BaseResultMap" parameterType="Map">
		select
		<include refid="Base_Column_List" />
		from vod_tv_module
		where channel = #{channel}
		order by sequence
	</select>
	<select id="selectbymoduleid" resultMap="BaseResultMap" parameterType="Map">
		select
		<include refid="Base_Column_List" />
		from vod_tv_module
		where moduleId = #{moduleId}
	</select>

	<select id="count" parameterType="Map" resultType="INTEGER">
		select count(1)
		from vod_tv_module
		where 1=1
		<include refid="whrClauseLike" />
		<include refid="whrClauseEqual" />
	</select>
	<select id="page" parameterType="Map" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from vod_tv_module
		where 1=1
		<include refid="whrClauseLike" />
		<include refid="whrClauseEqual" />
		<include refid="orderByClause" />
		<if test="start != null  ">
			limit #{start},#{pageSize}
		</if>
	</select>
	<select id="find" parameterType="Map" resultType="Map">
		SELECT
		flag, moduleId
		id, channel pid,name name, 0 open,sequence
		FROM vod_tv_module
		UNION ALL
		select
		flag ,channelcode id,0 pid,channelName name ,0 open,sequence
		from vod_tv_channel where
		levels=1
		order by sequence
	</select>
	
	<select id="findMaxModuleSeq" parameterType="Map" resultType="Integer">						
		SELECT ifnull(max(sequence),0)+1 FROM vod_tv_module a
		where a.channel=#{channel}
	</select>
	
	<select id="load" resultMap="BaseResultMap" parameterType="Map">
		select
		moduleId, masterplateId, sequence,channel,describes,name,flag
		from
		vod_tv_module
		where moduleId = #{moduleId}
	</select>

	<delete id="deletemodule" parameterType="map">
		delete from vod_tv_module
		where
		<if test="moduleId != null and moduleId!=''">
			moduleId = #{moduleId}
		</if>
	</delete>
	<insert id="insert" parameterType="com.pbtd.manager.vod.tv.mould.domain.VodTvModule">
		insert into vod_tv_module (
		masterplateId,
		sequence,
		channel,
		describes,
		name,
		flag
		)
		values (
		#{masterplateid,jdbcType=INTEGER},
		#{sequence,jdbcType=INTEGER},
		#{channel},
		#{describes,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		1)
	</insert>

	<update id="update" parameterType="com.pbtd.manager.vod.tv.mould.domain.VodTvModule">
		update vod_tv_module
		<set>
			<if test="masterplateid != null">
				masterplateId = #{masterplateid,jdbcType=INTEGER},
			</if>
			<if test="sequence != null">
				sequence = #{sequence,jdbcType=INTEGER},
			</if>
			<if test="channel != null">
				channel = #{channel,jdbcType=INTEGER},
			</if>
			<if test="describes != null">
				describes = #{describes,jdbcType=VARCHAR},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR}
			</if>
			,flag = 1 
		</set>
		where moduleId = #{moduleid}
	</update>


	<!--绑定信息查询条数 -->
	<select id="countalbum" parameterType="Map" resultType="INTEGER">
		select count(1)
		from vod_tv_module_album a
		left join vod_phone_albuminfo
		b on a.seriesCode=b.seriesCode
		where 1=1
		<if test="moduleId != null and moduleId !='' ">
			and a.moduleId=#{moduleId,jdbcType=INTEGER}
		</if>
		<if test="masterplateNum!=null ">
			and a.masterplateNum=#{masterplateNum,jdbcType=INTEGER}
		</if>
		<if test="seriesCode!=null ">
			and a.seriesCode=#{seriesCode,jdbcType=INTEGER}
		</if>
		<if test="seriesName != null and seriesName !='' ">
			and b.seriesName like '%${seriesName}%'
		</if>
		<if test="status != null ">
			and b.status=#{status,jdbcType=INTEGER}
		</if>
	</select>
	<!--绑定信息查询列表 -->
	<select id="pagealbum" parameterType="Map" resultType="Map">
		select
		a.id,a.seriesCode,b.seriesName,b.ChannelName,b.actorName,b.pictureurl1,b.pictureurl2,
		writerName,b.volumncount,b.currentnum,b.status,a.sequence,a.imgurl1,a.imgurl2,a.imgurl3,a.imgurl4,a.imgStatus
		from
		vod_tv_module_album a
		left join vod_phone_albuminfo b on
		a.seriesCode=b.seriesCode
		<where>
			<if test="moduleId != null and moduleId !='' ">
				and a.moduleId=#{moduleId,jdbcType=INTEGER}
			</if>
			<if test="masterplateNum!=null ">
				and a.masterplateNum=#{masterplateNum,jdbcType=INTEGER}
			</if>
			<if test="seriesCode!=null ">
				and a.seriesCode=#{seriesCode,jdbcType=INTEGER}
			</if>
			<if test="seriesName != null and seriesName !='' ">
				and b.seriesName like '%${seriesName}%'
			</if>
			<if test="status != null ">
				and b.status=#{status,jdbcType=INTEGER}
			</if>
		</where>
		order by a.sequence
		<if test="start != null   ">
			limit #{start},#{pageSize}
		</if>
	</select>

	<insert id="insertalbum" parameterType="Map">
		insert into
		vod_tv_module_album
		(moduleid,seriesCode,masterplateNum)
		values (
		#{moduleId,jdbcType=VARCHAR},
		#{seriesCode,jdbcType=INTEGER},
		#{masterplateNum,jdbcType=INTEGER})
	</insert>
	<delete id="deletealbuminfo" parameterType="Map">
		delete from vod_tv_module_album
		<where>
			<if test="moduleId != null and moduleId !='' ">
				and moduleId=#{moduleId,jdbcType=INTEGER}
			</if>
			<if test="masterplateNum!=null ">
				and masterplateNum=#{masterplateNum,jdbcType=INTEGER}
			</if>
			<if test="seriesCode!=null ">
				and seriesCode=#{seriesCode,jdbcType=INTEGER}
			</if>
		</where>
	</delete>
	<update id="updateimg"
		parameterType="com.pbtd.manager.vod.common.mould.domain.vodMasterplate">
		update vod_tv_module_album
		<set>
			<if test="imgurl1 != null">
				imgurl1 = #{imgurl1,jdbcType=VARCHAR},
			</if>
			<if test="imgurl2 != null">
				imgurl2 = #{imgurl2,jdbcType=VARCHAR},
			</if>
			<if test="imgurl3 != null">
				imgurl3 = #{imgurl3,jdbcType=VARCHAR},
			</if>
			<if test="imgurl4 != null">
				imgurl4 = #{imgurl4,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateshangxian"
		parameterType="com.pbtd.manager.vod.common.mould.domain.vodMasterplate">
		update vod_tv_module_album
		<set>
			<if test="status != null">
				imgStatus = #{status,jdbcType=INTEGER}
			</if>
		</set>
		where id = #{albumid,jdbcType=INTEGER}
	</update>
	
		
	<update id="updateMoudleSeq" parameterType="Map">
		update vod_tv_module t 
		set t.channel=#{channel},t.sequence=#{sequence}
		where t.moduleId=#{moduleId}
	</update>
	
	<update id="updateflag1" parameterType="Map">
		update vod_tv_module set flag = #{flag}
		<if test="moduleId!=null"> 
			where moduleId = #{moduleId,jdbcType=INTEGER};
		</if>
	</update>
	<update id="updateflag2" parameterType="Map">
		update vod_tv_channel set flag = #{flag}
		<if test="channelCode!=null"> 
			where channelCode = #{channel};
		</if>
	</update>
	<update id="updateflag3" parameterType="Map">
		update vod_tv_channel set flag = #{flag} 
		<if test="channelCode!=null">
			where channelCode = #{channel};
		</if>
	</update>
</mapper>