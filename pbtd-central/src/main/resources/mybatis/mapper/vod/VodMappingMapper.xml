<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pbtd.playclick.integrate.mapper.VodMappingMapper">
    <resultMap id="resultMap" type="com.pbtd.playclick.integrate.domain.VodMapping">
        <result column="id" property="id" jdbcType="INTEGER" />      
        <result column="cp_chnId" property="cp_chnId" jdbcType="VARCHAR" /> 
         <result column="cp_tagId" property="cp_tagId" jdbcType="VARCHAR" /> 
        <result column="phone_chnId" property="phone_chnId" jdbcType="VARCHAR" />      
        <result column="phone_tagId" property="phone_tagId" jdbcType="VARCHAR" />      
        <result column="tv_chnId" property="tv_chnId" jdbcType="VARCHAR" />       
        <result column="tv_tagId" property="tv_tagId" jdbcType="VARCHAR" />      
        <result column="status" property="status" jdbcType="INTEGER" />
        <result column="bz" property="bz" jdbcType="VARCHAR" />  
         <result column="cpcode" property="cpcode" jdbcType="VARCHAR" />
        
    </resultMap>
    <sql id="columns" >
        id ,cp_chnId,cp_tagId, phone_chnId,tv_tagId,phone_tagId,bz, status,tv_chnId,cpcode
    </sql>
      <select id="load" parameterType="java.lang.Integer" resultMap="resultMap">
        select 
        <include refid="columns" />
        from  vod_mapping  
        where ID = #{id,jdbcType=INTEGER}
    </select>
    <!--SElECT查询语句-->
    <select id="count" parameterType="Map" resultType="java.lang.Integer">
        select 
        DISTINCT count(1) from  vod_mapping a
			left join   yh_vod_channel b on a.cp_chnId=b.chnId
			left join   gg_vod_channel b1 on a.cp_chnId=b1.chnId
	    left join   youk_vod_channel b2 on a.cp_chnId=b2.chnId
			left join yh_vod_label c on  a.cp_tagId=c.tagId
			left join gg_vod_label c1 on  a.cp_tagId=c1.tagId
	    left join youk_vod_label c2 on  a.cp_tagId=c2.tagId
			left join vod_channel e on a.phone_chnId=e.categoryCode and e.levels=1
			left join vod_channel e1 on a.phone_tagId=e1.categoryCode and e1.levels=2
			left join  cp_source f on f.code=a.cpcode
        where 1=1
       <if test="id != null and id > -1">
            and a.id = #{id,jdbcType=INTEGER}
        </if>
        <!-- <if test="tv_chnId != null and tv_chnId!='' ">
            and a.tv_chnId = #{tv_chnId,jdbcType=INTEGER}
        </if> -->
         <if test="phone_chnId != null and phone_chnId!='' ">
            and a.phone_chnId = #{phone_chnId,jdbcType=INTEGER}
        </if>
        <if test="cp_chnId != null and cp_chnId!='' ">
            and a.cp_chnId = #{cp_chnId,jdbcType=VARCHAR}
        </if>
         <if test="cpcode != null and cpcode!='' ">
            and a.cpcode = #{cpcode,jdbcType=VARCHAR}
        </if>
         <if test="name != null and name!='' ">
         and (
                 c1.tagName	 like  CONCAT('%', #{name,jdbcType=VARCHAR}, '%')   
         	 or  c.tagName	 like    CONCAT('%', #{name,jdbcType=VARCHAR}, '%')   
			or   c2.tagName  like   CONCAT('%', #{name,jdbcType=VARCHAR}, '%')   
         )
        </if>
          <if test="status != null and status!='' ">
            and a.status = #{status,jdbcType=INTEGER}
        </if>
        
    </select>
    <select id="find" parameterType="Map" resultMap="resultMap">
         select 
        DISTINCT  a.id ,
			CASE cpcode WHEN '2'     THEN b1.chnName			WHEN '1'     THEN b.chnName		 WHEN '5'     THEN b2.chnName		end  cp_chnId,
			CASE cpcode			WHEN '2'     THEN c1.tagName			WHEN '1'     THEN c.tagName	 	WHEN '5'     THEN c2.tagName		end cp_tagId,
			e.`Name` phone_chnId,e1.`Name` phone_tagId, f.name bz, a.status, cpcode
			from  vod_mapping a
			left join   yh_vod_channel b on a.cp_chnId=b.chnId
			left join   gg_vod_channel b1 on a.cp_chnId=b1.chnId
	    left join   youk_vod_channel b2 on a.cp_chnId=b2.chnId
			left join yh_vod_label c on  a.cp_tagId=c.tagId
			left join gg_vod_label c1 on  a.cp_tagId=c1.tagId
	    left join youk_vod_label c2 on  a.cp_tagId=c2.tagId
			left join vod_channel e on a.phone_chnId=e.categoryCode and e.levels=1
			left join vod_channel e1 on a.phone_tagId=e1.categoryCode and e1.levels=2
			left join  cp_source f on f.code=a.cpcode
        where 1=1
       <if test="id != null and id > -1">
            and a.id = #{id,jdbcType=INTEGER}
        </if>
        <!-- <if test="tv_chnId != null and tv_chnId!='' ">
            and a.tv_chnId = #{tv_chnId,jdbcType=INTEGER}
        </if> -->
         <if test="phone_chnId != null and phone_chnId!='' ">
            and a.phone_chnId = #{phone_chnId,jdbcType=INTEGER}
        </if>
        <if test="cp_chnId != null and cp_chnId!='' ">
            and a.cp_chnId = #{cp_chnId,jdbcType=VARCHAR}
        </if>
         <if test="cpcode != null and cpcode!='' ">
            and a.cpcode = #{cpcode,jdbcType=VARCHAR}
        </if>
         <if test="name != null and name!='' ">
         and (
                 c1.tagName	 like  CONCAT('%', #{name,jdbcType=VARCHAR}, '%')   
         	 or  c.tagName	 like    CONCAT('%', #{name,jdbcType=VARCHAR}, '%')   
			or   c2.tagName  like   CONCAT('%', #{name,jdbcType=VARCHAR}, '%')   
         )
        </if>
          <if test="status != null and status!='' ">
            and a.status = #{status,jdbcType=INTEGER}
        </if>
            	 limit #{start},#{pageSize}
    </select>
    <insert id="insert" parameterType="com.pbtd.playclick.integrate.domain.VodMapping">
        insert into 
        vod_mapping 
        (cp_chnId,cp_tagId, phone_chnId,tv_chnId,tv_tagId,phone_tagId,bz, status,cpcode
        )
        values 
        (
        #{cp_chnId,jdbcType=VARCHAR},
        #{cp_tagId,jdbcType=VARCHAR},
        #{phone_chnId,jdbcType=VARCHAR},
        #{tv_chnId,jdbcType=VARCHAR},
        #{tv_tagId,jdbcType=VARCHAR},
        #{phone_tagId,jdbcType=VARCHAR},
        #{bz,jdbcType=VARCHAR},
        #{status,jdbcType=INTEGER},
           #{cpcode,jdbcType=VARCHAR}
        )
    </insert>
    <update id="update" parameterType="com.pbtd.playclick.integrate.domain.VodMapping">
        update vod_mapping
        <set>
         <if test="cpcode != null  ">
              cpcode = #{cpcode,jdbcType=VARCHAR},
        </if>
	    <if test="cp_chnId != null  ">
              cp_chnId = #{cp_chnId,jdbcType=VARCHAR},
        </if>
        <if test="cp_tagId != null   ">
              cp_tagId = #{cp_tagId,jdbcType=VARCHAR},
        </if>
          <if test="phone_chnId != null  ">
              phone_chnId = #{phone_chnId,jdbcType=VARCHAR},
        </if>
          <if test="tv_chnId != null ">
              tv_chnId = #{tv_chnId,jdbcType=VARCHAR},
        </if>
         <if test="tv_tagId != null   ">
              tv_tagId = #{tv_tagId,jdbcType=VARCHAR},
        </if>
         <if test="phone_tagId != null   ">
              phone_tagId = #{phone_tagId,jdbcType=VARCHAR},
        </if>
        <if test="bz != null   ">
              bz = #{bz,jdbcType=VARCHAR},
        </if>
         <if test="status != null   ">
              status = #{status,jdbcType=INTEGER},
        </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    
    <delete id="deletes" parameterType="Map" >
        delete from vod_mapping
        where 1=1
        <if test="id != null and id > -1">
            and id = #{id,jdbcType=INTEGER}
        </if>
        <if test="id_ != null">
        	and id in
        	<foreach collection="id_" index="index" item="item" open="(" separator="," close=")">
            	#{item,jdbcType=INTEGER}
            </foreach>
        </if>
    </delete>
 </mapper>