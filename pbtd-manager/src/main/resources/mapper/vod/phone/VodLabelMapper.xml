<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pbtd.manager.vod.phone.common.mapper.VodLabelMapper">
	<resultMap id="resultMap"
		type="com.pbtd.manager.vod.phone.common.domain.Vodlabel">
		<result column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="level" property="level" jdbcType="INTEGER" />
		<result column="type" property="type" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="sequence" property="sequence" jdbcType="INTEGER" />
		<result column="create_time" property="create_time" jdbcType="DATE" />
		<result column="create_user" property="create_user" jdbcType="VARCHAR" />
		<result column="update_time" property="update_time" jdbcType="DATE" />
		<result column="update_user" property="update_user" jdbcType="VARCHAR" />
		<result column="typename" property="typename" jdbcType="VARCHAR" />
		<result column="bz" property="bz" jdbcType="VARCHAR" />
		<result column="anothername" property="anothername" jdbcType="VARCHAR" />
		<result column="labelPic" property="labelPic" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="columns">
		id, name,type,level ,sequence, status
		,bz,create_time,create_user, update_time,update_user,anothername,labelPic
	</sql>
	<!-- 模糊查询 -->
	<sql id="whrClauseLike">
		<if test="id != null and id > -1">
			and id = #{id,jdbcType=INTEGER}
		</if>
		<if test="name != null and name != ''">
			and name like '%${name}%'
		</if>
		<if test="create_user != null and create_user != ''">
			and create_user like '%${create_user}%'
		</if>
		<if test="update_user != null and update_user != ''">
			and update_user like '%${update_user}%'
		</if>
	</sql>
	<sql id="whrClauseLikeMore">
		<if test="id_ != null">
			and ID in
			<foreach collection="id_" index="index" item="item" open="("
				separator="," close=")">
				#{item,jdbcType=INTEGER}
			</foreach>
		</if>
	</sql>
	<!-- 精确查询 -->
	<sql id="whrClauseEqual">
		<if test="id != null and id > -1">
			and ID = #{id,jdbcType=INTEGER}
		</if>
		<if test="level != null and level > -1">
			and level = #{level,jdbcType=INTEGER}
		</if>
		<if test="type != null and type > -1">
			and type = #{type,jdbcType=INTEGER}
		</if>
		<if test="status != null and status > -1">
			and status = #{status,jdbcType=INTEGER}
		</if>
		<if test="create_time != null and create_time != '' ">
			and 
            (
            date_format(create_time,'%Y-%m-%d') = #{create_time,jdbcType=DATE}
            or date_format(update_time,'%Y-%m-%d') = #{create_time,jdbcType=DATE}
            )
		</if>
		<if test="update_time != null and update_time != '' ">
			and date_format(update_time,'%Y-%m-%d') = #{update_time,jdbcType=DATE}
		</if>
	</sql>
	<sql id="whrClauseEqualMore">
		<if test="id_ != null">
			and ID in
			<foreach collection="id_" index="index" item="item" open="("
				separator="," close=")">
				#{item,jdbcType=INTEGER}
			</foreach>
		</if>
	</sql>
	<sql id="orderByClause">
		<choose>
			<when test="sort != null and sort != ''">
				order by ${sort}
				<if test="order != null and order != ''">${order}</if>
			</when>
			<otherwise>
				order by type,sequence
			</otherwise>
		</choose>
	</sql>
	<!--SElECT查询语句 -->
	<select id="count" parameterType="Map" resultType="java.lang.Integer">
		select count(ID)
		from vod_phone_label
		where 1=1
		<include refid="whrClauseLike" />
		<include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
	</select>
	<select id="page" parameterType="Map" resultMap="resultMap">
		select
		id, name,
		(select b.name from vod_labeltype b where
		b.id=a.type ) typename,
		type,level ,sequence,
		status
		,bz,create_user,update_user,anothername,labelPic
		from vod_phone_label a
		where 1=1
		<include refid="whrClauseLike" />
		<include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
		<include refid="orderByClause" />
		<if test="start != null  ">
			limit #{start},#{pageSize}
		</if>
	</select>
	<select id="find" parameterType="Map" resultMap="resultMap">
		select
		id, name,
		(select b.name from vod_labeltype b where
		b.id=a.type ) typename,
		type,level ,sequence,
		status
		,bz,create_time,create_user, update_time,update_user,anothername,labelPic
		from vod_phone_label a
		where 1=1
		<include refid="whrClauseLike" />
		<include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
		<include refid="orderByClause" />
		<if test="start != null  ">
			limit #{start},#{pageSize}
		</if>
	</select>
	<select id="generatePosition" parameterType="Map" resultType="java.lang.Integer">
		select case when max(POSITION) is not null then max(POSITION) + 10
		else 10 end as POSITION
		from vod_phone_label
		where 1=1
		<include refid="whrClauseLike" />
		<include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
	</select>
	<select id="load" parameterType="java.lang.Integer" resultMap="resultMap">
		select
		<include refid="columns" />
		from vod_phone_label
		where ID = #{id,jdbcType=INTEGER}
	</select>
	<!--INSERT/UPDATE/DELETE 执行语句 -->
	<insert id="insert" parameterType="com.pbtd.manager.vod.phone.common.domain.Vodlabel">
		insert into
		vod_phone_label
		(
		name,type,level,sequence, status
		,bz,create_time,create_user,anothername
		)
		values
		(
		#{name,jdbcType=VARCHAR},
		#{type,jdbcType=INTEGER},
		#{type,jdbcType=INTEGER},
		#{sequence,jdbcType=INTEGER},
		#{status,jdbcType=INTEGER},
		#{bz,jdbcType=VARCHAR},
		now(),
		#{create_user,jdbcType=VARCHAR},
		#{anothername,jdbcType=VARCHAR} 
		)
	</insert>
	<!-- 插入标签 -->
	<insert id="insertPrimary">
		insert into vod_phone_label (
		id, name,
		type,level,sequence) values
		( #{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{level,jdbcType=INTEGER},
		#{level,jdbcType=INTEGER},
		#{sequence,jdbcType=VARCHAR}
		)
	</insert>

	<update id="update" parameterType="com.pbtd.manager.vod.phone.common.domain.Vodlabel">
		update vod_phone_label
		<set>
			update_time=now(),
			<if test="name != null ">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="type != null and type>0">
				level = #{type,jdbcType=INTEGER},
			</if>
			<if test="sequence != null and sequence>0">
				sequence = #{sequence,jdbcType=INTEGER},
			</if>
			<if test="type != null and type>0 ">
				type = #{type,jdbcType=INTEGER},
			</if>
			<if test="status != null and status>-1">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="bz != null">
				bz = #{bz,jdbcType=VARCHAR},
			</if>
			<if test="update_user != null">
				update_user = #{update_user,jdbcType=VARCHAR},
			</if>
			<if test="anothername != null">
				anothername = #{anothername,jdbcType=VARCHAR},
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateStatus" parameterType="Map">
		update vod_phone_label
		set status = #{status,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<delete id="deletes" parameterType="Map">
		delete from vod_phone_label
		where 1=1
		<include refid="whrClauseLike" />
		<include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
	</delete>

	<!-- 标签排序 start -->	
	<update id="updatesequce" parameterType="Map">

		update vod_phone_label set
		<choose>
			<when test=" plus !=null and plus !=''">
				sequence=sequence+1
			</when>
			<otherwise>
				sequence=sequence-1
			</otherwise>
		</choose>
		where type=#{type,jdbcType=INTEGER}
		and id !=#{id,jdbcType=INTEGER}
		<!-- and level =#{level,jdbcType=INTEGER} -->
    		 <![CDATA[
    		  and sequence>=#{minnum,jdbcType=INTEGER}
    		  and sequence<=#{maxnum,jdbcType=INTEGER}
    		]]>
	</update>
	<update id="addsequce" parameterType="Map">
		update vod_phone_label set
		sequence=sequence+1
		where
		<!-- level =#{level,jdbcType=INTEGER} and -->
		type=#{type,jdbcType=INTEGER}
    		  <![CDATA[  and sequence>=#{maxnum,jdbcType=INTEGER} ]]>

	</update>

	<update id="deletesequce" parameterType="Map">
		update vod_phone_label set
		sequence=sequence-1
		where  <!-- level =#{level,jdbcType=INTEGER} and -->
		type=#{type,jdbcType=INTEGER}
    		  <![CDATA[  and sequence>=#{maxnum,jdbcType=INTEGER} ]]>

	</update>
	
	<select id="findsequence" parameterType="Map" resultType="Map">
		select  min(sequence) min, max(sequence) max
		from vod_phone_label a
		<where>
			<if test="level != null">
			and 	level = #{level,jdbcType=INTEGER}
			</if>
			<if test="id != null and id > -1">
				and ID = #{id,jdbcType=INTEGER}
			</if>
			<if test="type != null and type!='' ">
				and a.type = #{type,jdbcType=INTEGER}
			</if>
		</where>
			order by a.sequence
	</select>
	<!-- 标签排序 end-->
	
	<!-- 绑定频道 start  -->
		<insert id="addlabelchannel">
		insert into vod_labelchannel (
		label ,channel ,type  ) values
		( #{label,jdbcType=INTEGER},
		#{channel,jdbcType=INTEGER},
		#{type,jdbcType=VARCHAR}
		)
	</insert>
	<delete id="deletelabelchannel" parameterType="Map">
		delete from vod_labelchannel
			<where>
			<if test="id != null  and id > -1">
			    and	id = #{id,jdbcType=INTEGER}
			</if>
			<if test="label != null  and label > -1">
			    and	label = #{label,jdbcType=INTEGER}
			</if>
			<if test="channel != null and channel > -1">
				and channel = #{channel,jdbcType=INTEGER}
			</if>
			<if test="type != null and type !=''">
				and type = #{type,jdbcType=VARCHAR}
			</if>
		</where>
	</delete>
	<select id="countlabelchannel"  parameterType="Map" resultType="java.lang.Integer">
		select count(1) from  vod_labelchannel a
		left join vod_phone_channel b on a.type='phone' and a.channel=b.channelCode
		left join vod_tv_channel c on a.type='tv' and a.channel=c.channelCode
		<where>
			<if test="id != null  and id > -1">
			    and	a.id = #{id,jdbcType=INTEGER}
			</if>
			<if test="label != null  and label > -1">
			    and	a.label = #{label,jdbcType=INTEGER}
			</if>
			<if test="channel != null and channel > -1">
				and a.channel = #{channel,jdbcType=INTEGER}
			</if>
			<if test="type != null and type !=''">
				and a.type = #{type,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	<select id="pagelabelchannel" parameterType="Map" resultType="Map">
		select a.id, a.label,a.type,if(b.channelName is null,c.channelName,b.channelName) channelName ,a.channel 
		from  vod_labelchannel a
		left join vod_phone_channel b on a.type='phone' and a.channel=b.channelCode
		left join vod_tv_channel c on a.type='tv' and a.channel=c.channelCode
		<where>
			<if test="id != null  and id > -1">
			    and	a.id = #{id,jdbcType=INTEGER}
			</if>
			<if test="label != null  and label > -1">
			    and	a.label = #{label,jdbcType=INTEGER}
			</if>
			<if test="channel != null and channel > -1">
				and a.channel = #{channel,jdbcType=INTEGER}
			</if>
			<if test="type != null and type !=''">
				and a.type = #{type,jdbcType=VARCHAR}
			</if>
		</where>
		<if test="start != null  ">
			limit #{start},#{pageSize}
		</if>
	</select>
		<!-- 绑定频道 end -->
	<select id="findmaxVSminsequence" parameterType="Map" resultType="Map">
		select max(sequence) max, min(sequence) min
		from vod_phone_label a
		<where>
			<if test="id!=null ">
				and a.id  in (${id})
			</if>
			<if test="type!=null">
			   and a.type in(${type})
			</if>
		</where>
	</select>
	<select id="findsequencesum" parameterType="Map" resultType="Map">
		select  sequence 
		from vod_phone_label a
		<where>
			<if test="id!=null ">
				and a.id   in (${id})
			</if>
			<if test="type!=null">
			   and a.type in(${type})
			</if>
		</where>
			order by a.sequence
	</select>
	<select id="findlabelsequence" parameterType="Map" resultType="Map">
		select a.id,a.sequence
		from vod_phone_label a
		<where>
			<if test="id!=null ">
				and a.id not in (${id})
			</if>
			<if test="type!=null">
			   and a.type in(${type})
			</if>
			<if test="max!=null and max!='' ">
			       	<![CDATA[    and sequence<= #{max,jdbcType=INTEGER}]]>
			</if>
			<if test="min!=null and min!='' ">
			        <![CDATA[    and sequence>= #{min,jdbcType=INTEGER}]]>
			</if>
		</where>
		order by a.sequence
	</select>
		<select id="getType" parameterType="Map" resultType="String">
		select GROUP_CONCAT(type)
		from vod_phone_label
		where ID in (${id})
	</select>
	
	<update id="updateimg" parameterType="Map">
		update vod_phone_label
		<set>
			<if test="imgUrl != null  and imgUrl  !=''">
				  labelPic = #{imgUrl ,jdbcType=VARCHAR}
			</if>
		</set>
		where ID = #{id,jdbcType=INTEGER}
	</update>
</mapper>