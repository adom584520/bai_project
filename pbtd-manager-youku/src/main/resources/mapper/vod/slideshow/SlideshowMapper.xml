<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pbtd.manager.vod.phone.slideshow.mapper.SlideshowMapper" >
    <resultMap id="baseResultMap" type="com.pbtd.manager.vod.phone.slideshow.domain.Slideshow" >
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="content_point" property="contentPoint"/>
        <result column="type" property="type"/>
        <result column="image_url" property="imageUrl"/>
        <result column="target_code" property="targetCode"/>
        <result column="playurl" property="playurl"/>
        <result column="weburl" property="weburl"/>
        <result column="sequence" property="sequence"/>
        <result column="status" property="status"/>
        <result column="update_user" property="updateUser"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    
    <sql id="columns">
    	id,name,content_point,type,image_url,target_code,playurl,weburl,sequence,status,update_user,update_time
    </sql>
    <sql id="queryAndlimit">
    	<where>
    		<if test="status!=null">
    			and status = #{status}
    		</if>
    		<if test="targetCode!=null">
    			and target_code like concat("%",#{targetCode},"%")
    		</if>
    	</where>
    </sql>
    <select id="queryCount" resultType="long">
    	select count(*)
    	from vod_phone_slideshow
    	<include refid="queryAndlimit"/>
    </select>
    <select id="queryList" resultMap="baseResultMap">
    	select <include refid="columns"/>
    	from vod_phone_slideshow
    	<include refid="queryAndlimit"/>
    	order by sequence asc,id asc
    	limit #{start},#{pageSize}
    </select>
    
    <select id="queryById" resultMap="baseResultMap">
    	select <include refid="columns"/>
    	from vod_phone_slideshow
    	where id = #{id}
    </select>
    
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
    	insert into vod_phone_slideshow
    	(name,content_point,image_url,target_code,playurl,weburl,sequence,status,update_user,update_time,type)
    	values(#{name},#{contentPoint},#{imageUrl},#{targetCode},#{playurl},#{weburl},#{sequence},#{status},
    	#{updateUser},#{updateTime},#{type})
    </insert>
      <insert id="insertjson" useGeneratedKeys="true" keyProperty="id">
    	insert into vod_phone_slideshow
    	(id,name,content_point,image_url,target_code,playurl,weburl,sequence,status,update_user,update_time,type)
    	values(#{id},#{name},#{contentPoint},#{imageUrl},#{targetCode},#{playurl},#{weburl},#{sequence},#{status},
    	#{updateUser},#{updateTime},#{type})
    </insert>
    
    <update id="update">
    	update vod_phone_slideshow
    	<set>
    	<if test="name!=null ">
    	 name=#{name},
    	 </if>
    	 <if test="contentPoint!=null ">
    	 content_point=#{contentPoint},
    	 </if>
    	 <if test="targetCode!=null ">
        target_code=#{targetCode},
    	</if>
    	<if test="playurl!=null ">
    	playurl=#{playurl},
    	</if>
    	<if test="weburl!=null ">
    	weburl=#{weburl},
    	</if>
    	<if test="sequence!=null and sequence>0">
    	sequence=#{sequence},
    	</if>
    	<if test="status!=null and status>-1">
    	status=#{status},
    	</if>
    	<if test="updateUser!=null">
    	update_user=#{updateUser},
    	</if>
    	<if test="updateTime!=null ">
    	update_time=#{updateTime},
    	</if>
    	<if test="type!=null and type>0 ">
    	type=#{type},
    	</if>
    	</set>
    	where id = #{id}
       </update>
    
    <delete id="delete">
    	delete from vod_phone_slideshow
    	where id = #{id}
    </delete>
    
    <delete id="deleteBatch">
    	delete from vod_phone_slideshow
    	where id in 
    	<foreach collection="list" index="index" item="id" open="(" separator="," close=")">
    		#{id}
    	</foreach>
    </delete>
    
    <update id="updateImageUrl">
    	update vod_phone_slideshow
    	set image_url=#{imageUrl}
    	where id = #{id}
    </update>
    
    <update id="uplineOrDownLine">
    	update vod_phone_slideshow
    	set status=#{status}
    	where id = #{id}
    </update>
    
    <select id="queryUpLineCount" resultType="long">
    	select count(*)
    	from vod_phone_slideshow
    	where status = #{status}
    </select>
    <select id="findmaxVSminsequence" parameterType="Map" resultType="Map">
		select max(sequence) max, min(sequence) min
		from vod_phone_slideshow a
		<where>
			<if test="id!=null ">
				and a.id  in (${id})
			</if>
		</where>
	</select>
	<select id="findsequencesum" parameterType="Map" resultType="Map">
		select  sequence 
		from vod_phone_slideshow a
		<where>
			<if test="id!=null ">
				and a.id   in (${id})
			</if>
			<if test="id_ != null">
        	and ID in
        	<foreach collection="id_" index="index" item="item" open="(" separator="," close=")">
            	#{item,jdbcType=INTEGER}
            </foreach>
        </if>
		</where>
			order by a.sequence
	</select>
	<select id="findsequence" parameterType="Map" resultType="Map">
		select a.id,a.sequence
		from vod_phone_slideshow a
		<where>
			<if test="id!=null ">
				and a.id not in (${id})
			</if>
			<if test="max!=null and max!='' ">
			       	<![CDATA[    and sequence<= #{max,jdbcType=INTEGER}]]>
			</if>
			<if test="min!=null and min!='' ">
			        <![CDATA[    and sequence>= #{min,jdbcType=INTEGER}]]>
			</if>
		</where>
		order by a.sequence
	</select>
</mapper>