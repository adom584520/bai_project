<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pbtd.manager.vod.tv.common.mapper.VodTvChannelMapper">
    <resultMap id="resultMap" type="com.pbtd.manager.vod.tv.common.domain.VodTvchannel">
        <result column="id" property="id" jdbcType="INTEGER" />      
        <result column="channelName" property="channelName" jdbcType="VARCHAR" /> 
         <result column="name" property="name" jdbcType="VARCHAR" /> 
        <result column="channelCode" property="channelCode" jdbcType="INTEGER" /> 
        <result column="levels" property="levels" jdbcType="INTEGER" /> 
        <result column="status" property="status" jdbcType="INTEGER" /> 
        <result column="sequence" property="sequence" jdbcType="INTEGER" /> 
        <result column="parentCode" property="parentCode" jdbcType="INTEGER" /> 
        <result column="navigationtype" property="navigationtype" jdbcType="INTEGER" /> 
        <result column="count" property="count" jdbcType="INTEGER" /> 
        <result column="create_time" property="create_time" jdbcType="DATE" /> 
        <result column="create_user" property="create_user" jdbcType="VARCHAR" /> 
        <result column="update_time" property="update_time" jdbcType="DATE" /> 
         <result column="update_user" property="update_user" jdbcType="VARCHAR" /> 
           <result column="type" property="type" jdbcType="INTEGER" />      
           <result column="isshow_img" property="isshow_img" jdbcType="INTEGER" />
		<result column="isshow_right" property="isshow_right" jdbcType="INTEGER" />
		<result column="isshow_left" property="isshow_left" jdbcType="INTEGER" />
    </resultMap>
    <sql id="columns" >
        id,channelCode,channelName,levels,sequence	, parentCode, status,
        navigationtype,count, create_time,create_user,update_time,update_user,type
        ,isshow_img,isshow_right,isshow_left
    </sql>
    <!-- 模糊查询 -->
    <sql id="whrClauseLike">
        <if test="id != null and id > -1">
            and id = #{id,jdbcType=INTEGER}
        </if>
        <if test="channelName != null and channelName != ''">
            and channelName like '%${channelName}%'  
        </if>
        <if test="create_user != null and create_user != ''">
            and create_user like '%${create_user}%'  
        </if>
       <if test="update_user != null and update_user != ''">
            and update_user like '%${update_user}%'  
        </if> 
    </sql>
    <sql id="whrClauseLikeMore">
        <if test="id_ != null">
        	and ID in
        	<foreach collection="id_" index="index" item="item" open="(" separator="," close=")">
            	#{item,jdbcType=INTEGER}
            </foreach>
        </if>
    </sql>
    <!-- 精确查询 -->
    <sql id="whrClauseEqual">
        <if test="id != null and id > -1">
            and ID = #{id,jdbcType=INTEGER}
        </if>
        <if test="levels != null and levels > -1">
            and levels = #{levels,jdbcType=INTEGER}
        </if>
        <if test="channelCode != null and channelCode > -1">
            and channelCode = #{channelCode,jdbcType=INTEGER}
        </if>
        
        <if test="parentCode != null and parentCode > -1">
            and parentCode = #{parentCode,jdbcType=INTEGER}
        </if>
        <if test="status != null and status > -1">
            and status = #{status,jdbcType=INTEGER}
        </if>
        <if test="navigationtype != null and navigationtype > -1">
            and navigationtype = #{navigationtype,jdbcType=INTEGER}
        </if>
        <if test="create_time != null and create_time != '' ">
            and 
            (
            date_format(create_time,'%Y-%m-%d') = #{create_time,jdbcType=DATE}
            or date_format(update_time,'%Y-%m-%d') = #{create_time,jdbcType=DATE}
            )
        </if>
          <if test="update_time != null and update_time != '' ">
            and date_format(update_time,'%Y-%m-%d') = #{update_time,jdbcType=DATE}
        </if>
    </sql>
    <sql id="whrClauseEqualMore">
        <if test="id_ != null">
        	and ID in
        	<foreach collection="id_" index="index" item="item" open="(" separator="," close=")">
            	#{item,jdbcType=INTEGER}
            </foreach>
        </if>
    </sql>
    <sql id="orderByClause">
    	<choose>
        	<when test="sort != null and sort != ''">
        		order by ${sort} <if test="order != null and order != ''">${order}</if>
        	</when>
        	<otherwise>
        		order by parentCode,sequence
        	</otherwise>
        </choose>
    </sql>
    <!--SElECT查询语句-->
    <select id="count" parameterType="Map" resultType="java.lang.Integer">
        select count(ID)
        from  vod_tv_channel  
        where 1=1
        <if test="ids != null and ids!=''">
			and  channelCode in(${ids})
		</if>
        <if test="busschannel!=null and busschannel!=''">
		and 
		(
		channelCode in(
		  select  channelCode  name  
		from
		vod_buss_channel
		where bussId in (select bussId from vod_buss_info where name=#{busschannel,jdbcType=VARCHAR})
		)
		 or
		   parentCode in(
		  select  channelCode  name  
		from
		vod_buss_channel
		where bussId in (select bussId from vod_buss_info where name=#{busschannel,jdbcType=VARCHAR})
		)
		)
		</if>
        <include refid="whrClauseLike" />
         <include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
    </select>
    <select id="page" parameterType="Map" resultMap="resultMap">
 		select 
       	id,channelName,
		(select b.channelName from vod_tv_channel b where a.parentCode=b.channelCode )  name,
		channelCode,levels,sequence	, parentCode, status,
        navigationtype,count,type,isshow_img,isshow_right,isshow_left
        from  vod_tv_channel a  
        where 1=1
        <if test="ids != null and ids!=''">
			and a.channelCode in(${ids})
		</if>
        <if test="busschannel!=null and busschannel!=''">
		and 
		(
		channelCode in(
		  select  channelCode  name  
		from
		vod_buss_channel
		where bussId in (select bussId from vod_buss_info where name=#{busschannel,jdbcType=VARCHAR})
		)
		 or
		   parentCode in(
		  select  channelCode  name  
		from
		vod_buss_channel
		where bussId in (select bussId from vod_buss_info where name=#{busschannel,jdbcType=VARCHAR})
		)
		)
		</if>
       <include refid="whrClauseLike" />
         <include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
		<include refid="orderByClause" />
		 <if test="start != null   ">
            limit #{start},#{pageSize}
        </if>
    </select>
    <select id="loadbychannel" parameterType="INTEGER" resultMap="resultMap">
		select
		<include refid="columns" />
		from vod_tv_channel
		where levels=1 
		and channelCode =  {channelCode};
	</select>
	
    <select id="find" parameterType="Map" resultMap="resultMap">
      select 
       	id,channelName,
		(select b.channelName from vod_tv_channel b where a.parentCode=b.channelCode )  name,
		channelCode,levels,sequence	, parentCode, status,
        navigationtype,count, create_time,create_user,update_time,update_user,type
        ,isshow_img,isshow_right,isshow_left
        from  vod_tv_channel a  
        where 1=1
        <if test="ids != null and ids!=''">
			and a.channelCode in(${ids})
		</if>
       <include refid="whrClauseLike" />
         <include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
        <include refid="orderByClause" />
		 <if test="start != null  ">
            limit #{start},#{pageSize}
        </if>
    </select>
    <select id="generatePosition" parameterType="Map" resultType="java.lang.Integer">
        select case when max(channelCode) is not null then max(channelCode) + 1 else max(channelCode) + 1 end as count
        from  vod_tv_channel  
        where 1=1
    </select>
    <select id="load" parameterType="java.lang.Integer" resultMap="resultMap">
        select 
        <include refid="columns" />
        from  vod_tv_channel  
        where ID = #{id,jdbcType=INTEGER}
    </select>
    
    <select id="loadone" parameterType="INTEGER" resultMap="resultMap">
		select
		<include refid="columns" />
		from vod_tv_channel
		where levels=1 
		order by id limit 1
	</select>
    
    <!--INSERT/UPDATE/DELETE 执行语句-->
    <insert id="insert" parameterType="com.pbtd.manager.vod.tv.common.domain.VodTvchannel">
        insert into 
        vod_tv_channel 
        (
     		channelName,channelCode,levels,sequence	, parentCode, status,
        navigationtype,count, create_time,create_user,type
        )
        values 
        (
        #{channelName,jdbcType=VARCHAR},
          #{channelCode,jdbcType=INTEGER},
        #{levels,jdbcType=INTEGER},
        #{sequence,jdbcType=INTEGER},
        #{parentCode,jdbcType=INTEGER},
        #{status,jdbcType=INTEGER},
        #{navigationtype,jdbcType=INTEGER},
         #{count,jdbcType=INTEGER},now(),
        #{create_user,jdbcType=VARCHAR},
         #{type,jdbcType=INTEGER}
        )
    </insert>
    <update id="update" parameterType="com.pbtd.manager.vod.tv.common.domain.VodTvchannel">
        update vod_tv_channel
        <set>
        update_time=now(),
	    <if test="channelName != null ">
              channelName = #{channelName,jdbcType=VARCHAR},
        </if>
        <if test="type != null and type>0">
              type = #{type,jdbcType=INTEGER},
        </if>
        <if test="levels != null and levels>0">
              levels = #{levels,jdbcType=INTEGER},
        </if>
        <if test="sequence != null and sequence>0">
              sequence = #{sequence,jdbcType=INTEGER},
        </if>
        <if test="parentCode != null  and parentCode>0">
              parentCode = #{parentCode,jdbcType=INTEGER},
        </if>
        <if test="status != null and status>-1">
              status = #{status,jdbcType=INTEGER},
        </if>
        <if test="navigationtype != null and navigationtype>0">
              navigationtype = #{navigationtype,jdbcType=INTEGER},
        </if>
        <if test="count != null and count>0">
           count = #{count,jdbcType=INTEGER},
        </if>
          <if test="update_user != null">
           update_user = #{update_user,jdbcType=VARCHAR},
        </if>
        <if test="isshow_left != null and isshow_left>-1">
				isshow_left = #{isshow_left,jdbcType=INTEGER},
			</if>
			<if test="isshow_right != null and isshow_right>-1">
				isshow_right = #{isshow_right,jdbcType=INTEGER},
			</if>
			<if test="isshow_img != null and isshow_img>-1">
				isshow_img = #{isshow_img,jdbcType=INTEGER},
			</if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    
    <update id="updatesequence" parameterType="com.pbtd.manager.vod.tv.common.domain.VodTvchannel">
        update vod_tv_channel
        <set>
        update_time=now(),
	    <if test="channelName != null ">
              channelName = #{channelName,jdbcType=VARCHAR},
        </if>
        <if test="type != null and type>0">
              type = #{type,jdbcType=INTEGER},
        </if>
        <if test="levels != null and levels>0">
              levels = #{levels,jdbcType=INTEGER},
        </if>
        <if test="sequence != null and sequence>0">
              sequence = #{sequence,jdbcType=INTEGER},
        </if>
        </set>
        where ID = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateSeqByChannelCode" parameterType="com.pbtd.manager.vod.tv.common.domain.VodTvchannel">
		update vod_tv_channel t 
		set t.sequence=#{sequence}
		where t.channelCode=#{channelCode}
	</update>
    <update id="updateStatus" parameterType="com.pbtd.manager.vod.tv.special.domain.VodTvSpecial">
        update vod_tv_channel set
         status = #{status,jdbcType=INTEGER}
         where id=#{id,jdbcType=INTEGER}
        </update>
    
    <delete id="deletes" parameterType="Map" >
        delete from vod_tv_channel
        where 1=1
        <include refid="whrClauseLike" />
        <include refid="whrClauseEqual" />
		<include refid="whrClauseLikeMore" />
    </delete>
    
       <update id="updatesequce" parameterType="Map" >
			update vod_tv_channel set 
			<choose>
			  <when test=" plus !=null and plus !=''">
			    sequence=sequence+1
			  </when>
			  <otherwise>
			    sequence=sequence-1
			  </otherwise>
			</choose>
    		where  
    		    levels =#{levels,jdbcType=INTEGER} 
    		   <if test="parentCode != null  and levels !=1">
		        	 and   parentCode = #{parentCode,jdbcType=INTEGER}
		        </if>
		          <if test="id != null  and id !='' ">
		        	and id !=#{id,jdbcType=INTEGER} 
		        </if>
    		 <![CDATA[
    		  and sequence>=#{minnum,jdbcType=INTEGER}
    		  and sequence<=#{maxnum,jdbcType=INTEGER}
    		]]>
    </update>
    
       <update id="addsequce" parameterType="Map" >
			update vod_tv_channel set 
			    sequence=sequence+1
    		where   levels =#{levels,jdbcType=INTEGER} 
    		  <![CDATA[  and sequence>=#{maxnum,jdbcType=INTEGER} ]]>
    		   <if test="parentCode != null  and levels !=1">
		        	 and   parentCode = #{parentCode,jdbcType=INTEGER}
		       </if>
    	</update>
    	
    	 <!--绑定信息查询条数 -->
    <select id="countalbum" parameterType="Map" resultType="java.lang.Integer">
        select count(1)
        from  vod_tv_channel_albuminfo a
        left join  vod_phone_albuminfo b on  a.seriesCode=b.seriesCode
        where 1=1
        <if test="channelCode!=null ">
         and a.channelCode=#{channelCode,jdbcType=INTEGER}
        </if>
          <if test="seriesCode!=null ">
          and a.seriesCode=#{seriesCode,jdbcType=INTEGER}
         </if>
         <if test="seriesName != null and seriesName !='' ">
     		and b.seriesName like '%${seriesName}%'
		</if>
	     <if test="status != null ">
	     and b.status=#{status,jdbcType=INTEGER}
	     </if>
    </select>
    
      <!--绑定信息查询列表 -->
    <select id="pagealbum" parameterType="Map" resultType="Map">
 			select  a.seriesCode,b.seriesName,b.ChannelName,b.actorName,
 			writerName,b.volumncount,b.currentnum,b.status,a.sequence
		     from  vod_tv_channel_albuminfo a
		   left join vod_phone_albuminfo b on  a.seriesCode=b.seriesCode
		     <where>
			     <if test="channelCode!=null ">
		        and a.channelCode=#{channelCode,jdbcType=INTEGER}
		        </if>
		          <if test="seriesCode!=null ">
		          and a.seriesCode=#{seriesCode,jdbcType=INTEGER}
		         </if>
		         <if test="seriesName != null and seriesName !='' ">
		     		and b.seriesName like '%${seriesName}%'
				</if>
			     <if test="status != null ">
			     and b.status=#{status,jdbcType=INTEGER}
			     </if>
				     </where>
		         	order by a.sequence
		     	 <if test="start != null   ">
		            limit #{start},#{pageSize}
		        </if>
    </select>
    <!--下发频道绑定的专辑的接口  -->
    <select id="channelalbum" parameterType="Map" resultType="Map">
 			select id, seriesCode,
 			channelCode,status,sequence
		     from  vod_tv_channel_albuminfo 
		     <where>
			     <if test="channelCode != null and channelCode !='' ">
			      channelCode=#{channelCode,jdbcType=INTEGER}
			     </if>
		     </where>
         	order by sequence
     	 <if test="start != null   ">
            limit #{start},#{pageSize}
        </if>
    </select>
    
    <!-- 保存频道节目信息 -->
    <insert id="saveChannelAlbum" parameterType="Map">
		insert into vod_tv_channel_albuminfo(channelCode,sequence,status,seriesCode)
		values(#{channelCode},#{sequence},#{status},#{seriesCode})
    </insert>	
   
   <!-- 删除频道节目信息 -->
   <delete id="delChannelAlbum" parameterType="Map">
   		DELETE from vod_tv_channel_albuminfo
		<where>
		        <if test="channelCode != null and channelCode !='' ">
			      and channelCode=#{channelCode,jdbcType=INTEGER}
			     </if>
			     <if test="seriesCode != null and seriesCode !='' ">
			     and  seriesCode=#{seriesCode,jdbcType=INTEGER}
			     </if>
			     <if test="channelCodeid != null and channelCodeid !='' ">
					and channelCode in(
					 select  channelCode  from  vod_tv_channel where id=#{channelCodeid,jdbcType=INTEGER}
					)
				</if>
		</where>
   </delete>
   
   <!-- 更新频道节目排序 -->
   <update id="updateChannelAlbumSeq" parameterType="Map">
   		update vod_tv_channel_albuminfo t 
		set t.sequence=#{sequence}
		where t.channelCode=#{channelCode}
		and t.seriesCode=#{seriesCode}
   </update>
   <select id="findalbummaxVSminsequence" parameterType="Map" resultType="Map">
		select max(sequence) max, min(sequence) min
		from vod_tv_channel_albuminfo a
		<where>
			<if test="channelCode!=null ">
				and a.channelCode=#{channelCode,jdbcType=INTEGER}
			</if>
			<if test="albumid!=null ">
				and a.seriesCode   in (${albumid})
			</if>
		</where>
	</select>
	<select id="findalbumsequencesum" parameterType="Map" resultType="Map">
		select  sequence 
		from vod_tv_channel_albuminfo a
		<where>
			<if test="channelCode!=null ">
				and a.channelCode=#{channelCode,jdbcType=INTEGER}
			</if>
			<if test="albumid!=null ">
				and a.seriesCode   in (${albumid})
			</if>
		</where>
			order by a.sequence
	</select>
	<select id="findalbumsequence" parameterType="Map" resultType="Map">
		select a.seriesCode,a.sequence
		from vod_tv_channel_albuminfo a
		<where>
			<if test="channelCode!=null ">
				and a.channelCode=#{channelCode,jdbcType=INTEGER}
			</if>
			<if test="albumid!=null ">
				and a.seriesCode not in (${albumid})
			</if>
			<if test="max!=null and max!='' ">
			       	<![CDATA[    and sequence<= #{max,jdbcType=INTEGER}]]>
			</if>
			<if test="min!=null and min!='' ">
			        <![CDATA[    and sequence>= #{min,jdbcType=INTEGER}]]>
			</if>
		</where>
		order by a.sequence
	</select>
    	<!-- 插入频道 -->
    <insert id="insertPrimary">
		insert into vod_tv_channel (
		levels,channelName, channelCode,navigationtype,sequence) values
		(
		#{levels,jdbcType=INTEGER},
		#{channelName,jdbcType=VARCHAR},
		#{channelCode,jdbcType=INTEGER},1,#{sequence,jdbcType=VARCHAR}
		)
	</insert>
	  <select id="findsequence" parameterType="Map" resultType="Map">
		select  min(sequence) min, max(sequence) max
		from vod_tv_channel a
		<where>
			<if test="levels != null">
			and 	levels = #{levels,jdbcType=INTEGER}
			</if>
			<if test="id != null and id > -1">
				and ID = #{id,jdbcType=INTEGER}
			</if>
			<if test="parentCode != null  and levels !=1">
			and parentCode = #{parentCode,jdbcType=INTEGER}
		</if>
		</where>
			order by a.sequence
	</select>
	<!-- 以下为频道自动排序 -->
	 <select id="findchannelmaxVSminsequence" parameterType="Map" resultType="Map">
		select max(sequence) max, min(sequence) min
		from vod_tv_channel a
		<where>
			<if test="id!=null ">
				and a.id  in (${id})
			</if>
		</where>
	</select>
	<select id="findchannelsequencesum" parameterType="Map" resultType="Map">
		select  sequence 
		from vod_tv_channel a
		<where>
			<if test="id!=null ">
				and a.id   in (${id})
			</if>
			<if test="id_ != null">
        	and ID in
        	<foreach collection="id_" index="index" item="item" open="(" separator="," close=")">
            	#{item,jdbcType=INTEGER}
            </foreach>
        </if>
		</where>
			order by a.sequence
	</select>
	<select id="findchannelsequence" parameterType="Map" resultType="Map">
		select a.id,a.sequence
		from vod_tv_channel a
		<where>
			<if test="id!=null ">
				and a.id not in (${id})
			</if>
			<if test="max!=null and max!='' ">
			       	<![CDATA[    and sequence<= #{max,jdbcType=INTEGER}]]>
			</if>
			<if test="min!=null and min!='' ">
			        <![CDATA[    and sequence>= #{min,jdbcType=INTEGER}]]>
			</if>
		</where>
		order by a.sequence
	</select>
	
	
	<!-- 以下为频道绑定标签sql -->
	<select id="pagelabelforchannel" parameterType="Map" resultType="Map">
	SELECT b.id id,b.channel, a.id as label,a.name labelname,c.name typename,a.type ,b.sequence sequence
	from vod_labelchannel b 
	LEFT JOIN vod_phone_label  a on b.label=a.id
	left join vod_labeltype c on a.type=c.id 
	where b.type="tv" and b.channel=#{channel,jdbcType=VARCHAR}
      <if test="type!= null and type!='' ">
	  and a.type = #{type,jdbcType=VARCHAR}
	 </if>
     ORDER BY c.sequence,b.sequence
	 <if test="start != null   ">
            limit #{start},#{pageSize}
      </if>
	</select>
	<select id="countlabelforchannel" parameterType="Map" resultType="java.lang.Integer">
	SELECT count(1)
	from vod_labelchannel b 
	LEFT JOIN vod_phone_label  a on b.label=a.id 
	where b.type="tv"  and  b.channel=#{channel,jdbcType=VARCHAR}
	 <if test="type!= null and type!='' ">
	  and a.type = #{type,jdbcType=VARCHAR}
	 </if>
	  <if test="label!= null and label>0 ">
	  and b.label = #{label,jdbcType=INTEGER}
	 </if>
	 
	</select>
	<insert id="addbindinglabel" parameterType="Map">
	 insert into vod_labelchannel 
	 (label,channel,type,sequence)
	 values 
	 (#{label,jdbcType=INTEGER},#{channel,jdbcType=INTEGER},'tv',#{sequence,jdbcType=INTEGER})
	</insert>
	<update id="updatebindinglabel" parameterType="Map">
	 update vod_labelchannel 
	 set
	 sequence=#{sequence,jdbcType=INTEGER}
	 where id=#{id,jdbcType=INTEGER}
	</update>
	<delete id="deletebindinglabel" parameterType="Map">
	delete from vod_labelchannel  
		where type='tv'
				<if test="id!=null and id!='' ">
			  		and	id=#{id,jdbcType=INTEGER}	
				</if>
				<if test="channel!=null and channel!='' ">
					and channel=#{channel,jdbcType=VARCHAR}
				</if>
				<if test="channelCodeid != null and channelCodeid !='' ">
				and channel in(
				 select  channelCode  from  vod_phone_channel where id=#{channelCodeid,jdbcType=INTEGER}
				)
			</if>
	</delete>
	<!--  以下为绑定标签自动排序用 -->
     <select id="findchannellabelmaxVSminsequence" parameterType="Map" resultType="Map">
		SELECT  max(b.sequence) max, min(b.sequence) min
			from vod_labelchannel b 
			LEFT JOIN vod_phone_label  a on b.label=a.id 
		 <where>
		    b.type="tv"
			<if test="id!=null and id!='' ">
				and b.id  in (${id})
			</if>
			<if test="channel!=null and channel!='' ">
				and b.channel=#{channel,jdbcType=VARCHAR}
			</if>
			<if test="type!= null and type!='' ">
			 and a.type = #{type,jdbcType=VARCHAR}
			</if>
		</where>
	</select>
	<select id="findchannellabelsequencesum" parameterType="Map" resultType="Map">
		select  sequence 
		from vod_labelchannel  a
		<where>
			<if test="id!=null ">
				and a.id   in (${id})
			</if>
		</where>
			order by a.sequence
	</select>
	<select id="findchannellabelsequence" parameterType="Map" resultType="Map">
			SELECT b.id,b.sequence
			from vod_labelchannel b 
			LEFT JOIN vod_phone_label  a on b.label=a.id 
		<where>
		      b.type="tv"
			<if test="id!=null ">
			and b.id not in (${id})
			</if>
			<if test="channel != null and channel!='' ">
			 and b.channel = #{channel,jdbcType=VARCHAR}
			</if>
			<if test="type!= null and type!='' ">
			 and a.type = #{type,jdbcType=VARCHAR}
			</if>
			<if test="max!=null and max!='' ">
			       	<![CDATA[    and b.sequence<= #{max,jdbcType=INTEGER}]]>
			</if>
			<if test="min!=null and min!='' ">
			        <![CDATA[    and b.sequence>= #{min,jdbcType=INTEGER}]]>
			</if>
		</where>
		order by b.sequence
	</select>
</mapper>